{% comment %}
I wasn't able to find recursion support so I unrolled it.
Jekyll doesn't appear to be providing real support.
{% endcomment %}

{% capture collapsenode %}{{ page.url | remove_first:root_node }}{% endcapture %}
{% assign collapsename = collapsenode | split:'/'  %}
{% for item in collapsename limit:1 offset:1 %}
  {% capture collapsename %}{{ item }}{% endcapture %}
{% endfor %}

<div class="accordion" id="accordion2">
{% for node in content_tree %}
{% for subnode in node %}
  {% if forloop.first == true %}
  {% assign linknode = subnode %}
  <div class="accordion-group">
    <div class="accordion-heading">
      <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#{{ linknode }}">
      <strong>{{ linknode }}</strong>
      </a>
    </div>
    {% if collapsename == linknode %}
    <div id="{{ linknode }}" class="accordion-body collapse in">
    {% else %}
    <div id="{{ linknode }}" class="accordion-body collapse">
    {% endif %}
      <div class="accordion-inner">
      <ul class="nav nav-list">
  {% else %} 
    {% for subsubnode in subnode %}
        {% capture pagelink %}{{ root_node }}/{{ linknode }}/{{ subsubnode }}.html{% endcapture %}
        {% if pagelink == page.url %}
        <li class="active"><a href="{{ pagelink }}">{{ subsubnode }}</a></li>
        {% else %}
        <li><a href="{{ pagelink }}">{{ subsubnode }}</a></li>
        {% endif %}
 
    {% endfor %}
        </ul>
        </div>
      </div>
    </div>
  {% endif %}
{% endfor %}
{% endfor %}
</div>
